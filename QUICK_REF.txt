╔════════════════════════════════════════════════════╗
║          🖼️ IMAGE PROXY QUICK REFERENCE          ║
╚════════════════════════════════════════════════════╝

📌 FUNCTION SIGNATURE
─────────────────────
String coverProxy(String rawUrl, {int w = 400, int h = 600})

📌 IMPORT
─────────
import '../utils/image_proxy_utils.dart';

📌 BASIC USAGE
──────────────
CachedNetworkImage(
  imageUrl: coverProxy(imageUrl),
  fit: BoxFit.cover,
  placeholder: (c, _) => ShimmerBox(),
  errorWidget: (c, _, __) => ImageFallback(),
)

📌 CUSTOM SIZE
──────────────
coverProxy(imageUrl, w: 300, h: 500)

📌 HALAMAN YANG SUDAH DIUPDATE
──────────────────────────────
✅ lib/features/anime_card.dart
✅ lib/features/anime_detail_page.dart
✅ lib/features/completed_anime_page.dart
✅ lib/features/genre_results_page.dart
✅ lib/features/anime_search_page.dart

📌 HOW IT WORKS
───────────────
Input:  https://www.sankavollerei.com/poster.jpg
        ↓
Output: https://images.weserv.nl/?url=www.sankavollerei.com/poster.jpg
        &w=400&h=600&fit=cover&output=webp

📌 FEATURES
───────────
✓ CORS bypass
✓ Auto WebP compression  
✓ Image resize
✓ Global CDN
✓ 24h caching
✓ No authentication
✓ No server needed

📌 STATUS
─────────
✅ All images rendering correctly
✅ No Node.js server required
✅ No environment config needed
✅ Production ready

📌 NEXT STEPS
─────────────
$ flutter clean
$ flutter pub get
$ flutter run

════════════════════════════════════════════════════
